# Complete Nginx Docker reverse proxy config file
# HTTP
#server {
#  listen 8081;
#  listen [::]:8081;
#  server_name testserver.yourorg.lan;  
 # return 301 https://$server_name$request_uri;
 # }
  
## HTTPS
server {

  # Listen on port 80 for HTTP requests
  #listen 80;
  # SSL configuration
  listen 443 ssl http2;
  #listen [::]:443 ssl http2;
  
  server_name testserver.yourorg.lan; 
  #server_name _;

  access_log  /var/log/nginx/testserver.access.log;
  error_log /var/log/nginx/testserver.error.log;

  ssl_certificate /home/administrator/devops/certificates/testserver.crt;
  ssl_certificate_key /home/administrator/devops/certificates/testserver.key;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
  ssl_prefer_server_ciphers on;

  include /etc/nginx/mime.types;
 
  location / {
    #root /var/www/tutorial;
    #index index.html index.htm;
    #try_files $uri $uri/ /index.html;
    proxy_pass http://localhost:8081/;
    # MIME types added here to enable loading CSS, images, etc.
    # include  /etc/nginx/mime.types;
  }
 
  location /app_1 {
   proxy_pass http://localhost:8080/app_1/;
  }

  location /app_2 {
   proxy_pass http://localhost:8081/app_2/;
  }

  location /app_3 {
    #include    /etc/nginx/mime.types;
    #try_files $uri $uri/ /index.html;

    proxy_pass http://localhost:8083/;
    #try_files $uri $uri/ /index.html;    
    #proxy_http_version 1.1;
    #proxy_set_header Upgrade $http_upgrade;
    #proxy_set_header Connection 'upgrade';
    #proxy_set_header Host $host;
  }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }
} # End of Docker Nginx reverse proxy example file

